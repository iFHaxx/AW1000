name: AW1000-immortalwrt-v23.05.4

on:
  repository_dispatch:
  workflow_dispatch:
  push:  # Optional: allows workflow to run on every push

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  CONFIG_FILE: 'Arcadyan_AW1000.config'
  REPO_BRANCH: v23.05.4
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Kuala_Lumpur

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Free disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false
        swap-storage: true

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi $(docker images -q)
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/LeeHe-gif/depend_ubuntu2204_openwrt/refs/heads/main/depend_ubuntu2204_openwrt)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo mkdir -p /workdir
        sudo chown ${USER}:${GROUPS} /workdir
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Clone ImmortalWrt source code
      id: codes
      if: steps.init.outputs.status == 'success' && !cancelled()
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH immortalwrt

    - name: Free up disk space (bind directories)
      run: |
        sudo mkdir -p -m 777 /mnt/immortalwrt/dl /mnt/immortalwrt/staging_dir /mnt/immortalwrt/build_dir
        ln -sf /mnt/immortalwrt/dl immortalwrt/dl
        ln -sf /mnt/immortalwrt/staging_dir immortalwrt/staging_dir
        ln -sf /mnt/immortalwrt/build_dir immortalwrt/build_dir

    - name: Update & Install feeds
      working-directory: ./immortalwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configuration Customization - Build_Arcadyan_AW1000
      working-directory: ./immortalwrt
      run: |
        chmod +x ../customize.sh && ../customize.sh
        [[ -d "../files" ]] && mv -f ../files ./files
        [[ -e "../${CONFIG_FILE}" ]] && cp -f ../${CONFIG_FILE} .config
        make defconfig

    - name: Download package
      working-directory: ./immortalwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      working-directory: ./immortalwrt
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
        echo "status=success" >> ${GITHUB_OUTPUT}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: success()
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success'
      run: |
        cd immortalwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
      continue-on-error: true

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.organize.outputs.status == 'success'
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo -e "Compiled firmware for Arcadyan_AW1000 using ImmortalWrt source code" > release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: LeeHe-gif/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        token: ${{ secrets.GITHUB_TOKEN }}
